//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/#GamePlayMechanics/Scripts/Input/Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Player: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Player()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""1d60617b-9d6d-4d8b-974f-7e4f885d90bf"",
            ""actions"": [
                {
                    ""name"": ""MovementInput"",
                    ""type"": ""Value"",
                    ""id"": ""09b57423-a270-4c30-bd70-cc34b7ca47a9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AimDirectionInput"",
                    ""type"": ""Value"",
                    ""id"": ""b0018638-ecd4-4ddd-b78d-f1d8c29955d2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SprintInput"",
                    ""type"": ""Button"",
                    ""id"": ""47fadcc9-98b3-43ec-bc4a-f02c89dabd19"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JumpInput"",
                    ""type"": ""Button"",
                    ""id"": ""0f9d76e3-7a4e-4d5f-851a-b6b267db8877"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimInput"",
                    ""type"": ""Button"",
                    ""id"": ""114a02c9-3bb4-46f3-9aad-de10ca357c86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CombatModeInput"",
                    ""type"": ""Button"",
                    ""id"": ""521be4ba-80dc-41b5-bc2a-ec0f942851bc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MeleeAttackInput"",
                    ""type"": ""Button"",
                    ""id"": ""a6961aba-0d44-4f8b-9d51-80b76ddb98e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyAttackInput"",
                    ""type"": ""Button"",
                    ""id"": ""5e6506c8-ea3b-44e2-b775-edbdf3b2f3f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BowAttack"",
                    ""type"": ""Button"",
                    ""id"": ""16096f6e-004a-4d77-b4bc-278b72fce719"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SpecialAttackInput"",
                    ""type"": ""Button"",
                    ""id"": ""5114dd1f-73c4-4edc-bfb3-4a8a45d10785"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DodgeInput"",
                    ""type"": ""Button"",
                    ""id"": ""6dbb19bf-8dcc-412b-83df-e29efc7dfac5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PhaseInput"",
                    ""type"": ""Button"",
                    ""id"": ""375106fa-2804-4f27-828c-404f85073f1d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrouchInput"",
                    ""type"": ""Button"",
                    ""id"": ""f7ac477f-1b51-418b-a977-20832ea9e91e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrabInput"",
                    ""type"": ""Button"",
                    ""id"": ""ee8c4c69-67eb-4e6d-b014-3691699bc132"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractInput"",
                    ""type"": ""Button"",
                    ""id"": ""c61af035-768e-4acc-a414-95e4fc9f4cb6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ContinueDialogueInput"",
                    ""type"": ""Button"",
                    ""id"": ""aec491d3-71ee-4651-8166-552a61f3dddc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseInput"",
                    ""type"": ""Button"",
                    ""id"": ""0e8cd8ed-008c-4a36-883e-697472bd3c62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenJournalInput"",
                    ""type"": ""Button"",
                    ""id"": ""7c6b58f5-c335-4a10-8d66-89c281227585"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8084ff11-f5be-49ba-b375-cf376afd1417"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MovementInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""c15d6ca9-0e71-4532-88a9-d8591ab9cdf2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementInput"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1ef6c8de-3eb6-44e7-904e-caad823a1a6f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8cdd185c-2a23-471c-b6a3-ec07c731e857"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""592ca4cd-bd2f-401f-bbe7-503fd78474d7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1f20df1c-1170-4055-900c-75ce4e7a409c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""0b81e215-b4a7-45cf-ba48-37047fd5c3bb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementInput"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4309381a-4c74-4d58-ae20-fcd60db4b311"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8b6ee08c-ff35-44ff-ab90-e81b77724729"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9ce89f85-5768-4ae2-8089-6e0d645f838d"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""50735a07-2af8-4080-ab8d-f063b82ee2f9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7a8a9db6-9b31-498c-ad1e-c541d91d3e1e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""JumpInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93b4a2e3-0f49-471d-ae5a-6abca93bb47a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""JumpInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""830286df-cc89-43d3-a545-72a6196004da"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""GrabInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5839750a-1389-46bd-b465-7d983a55fe5f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GrabInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dc7f354-cf9c-438e-aef4-24856e276fbc"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false),ScaleVector2(x=0.05,y=0.05)"",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AimDirectionInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54add84e-c98f-4098-a2ec-6b7e8f7d257b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false),StickDeadzone,ScaleVector2(x=150,y=150)"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AimDirectionInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce652d8d-cc07-4c9a-ae92-fd35a67f5a06"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""InteractInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15b10871-3631-4a3c-8528-3d291fbbda10"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""InteractInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""934b542f-4645-4a54-b25d-56439350a058"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ContinueDialogueInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50f4545f-4441-49cd-8993-4614f555311d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ContinueDialogueInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5843f790-c999-450c-970b-54ef405102e8"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenJournalInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ac75a80-0f32-4661-ab7c-63e6e1ba5cdf"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenJournalInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08ce981d-b601-4c21-9c71-ce91b3d324b8"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SpecialAttackInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84464181-506c-48cd-8c55-53c8c5d42f4e"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DodgeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1cf35a17-4838-4441-9c70-4b4dbe97b39b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DodgeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31c00037-c0c8-46a3-be25-51503fb18050"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CrouchInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5cecf92d-5d06-416e-a308-278554b7dc7b"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CrouchInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93d46abf-4db2-4bf4-afe2-8d5d7abb4f31"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SpecialAttackInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dad8d315-c62c-4c7a-aa0e-cc545ce04096"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SprintInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65aaf3c0-af35-48f1-a5db-057587b7e38a"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SprintInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fa96d65-9775-4509-a840-46ec6f128dae"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""BowAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""819c78f1-57e6-4ab3-b2fe-0d6677e9bb37"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""BowAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3301d6f1-a23d-46d6-ad77-ff95be020be8"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PhaseInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""595d92f2-ac12-4c30-904c-8858d5568ae3"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PhaseInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""acf6bd76-57e1-4ad0-9683-2f2379e65b0c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PauseInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abaa6538-1b44-47ff-b9c9-83c8ce88de8b"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PauseInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1fb47e73-c8b3-4ca7-b27a-f4d55152ef82"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AimInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2d9ada3-cc1e-487d-b19e-0b8388339ed2"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AimInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eddc1938-ae99-4132-bbfc-0c44a61b4d0c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CombatModeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70d8306a-0fec-41b6-bcba-6529c941ba47"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CombatModeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57ac4e31-02c7-4efc-b09a-42e0269edba3"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CombatModeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bac0416c-2919-4104-874e-60ed1d2e7fde"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CombatModeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8179572e-b2b8-460e-96bd-e2c39215fd17"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CombatModeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""573b4037-5eba-4bae-827d-1e6d443fc3eb"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CombatModeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25aa5e8d-eba0-4018-866a-071b1bc48db1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MeleeAttackInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""500b3654-fead-4c97-bc44-f2bff3cdef40"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MeleeAttackInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""beb306ba-3c59-4f4b-9641-fffbbb928507"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""HeavyAttackInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eea0c073-c733-40fa-9a2a-c60c4de448e1"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""HeavyAttackInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_MovementInput = m_Gameplay.FindAction("MovementInput", throwIfNotFound: true);
        m_Gameplay_AimDirectionInput = m_Gameplay.FindAction("AimDirectionInput", throwIfNotFound: true);
        m_Gameplay_SprintInput = m_Gameplay.FindAction("SprintInput", throwIfNotFound: true);
        m_Gameplay_JumpInput = m_Gameplay.FindAction("JumpInput", throwIfNotFound: true);
        m_Gameplay_AimInput = m_Gameplay.FindAction("AimInput", throwIfNotFound: true);
        m_Gameplay_CombatModeInput = m_Gameplay.FindAction("CombatModeInput", throwIfNotFound: true);
        m_Gameplay_MeleeAttackInput = m_Gameplay.FindAction("MeleeAttackInput", throwIfNotFound: true);
        m_Gameplay_HeavyAttackInput = m_Gameplay.FindAction("HeavyAttackInput", throwIfNotFound: true);
        m_Gameplay_BowAttack = m_Gameplay.FindAction("BowAttack", throwIfNotFound: true);
        m_Gameplay_SpecialAttackInput = m_Gameplay.FindAction("SpecialAttackInput", throwIfNotFound: true);
        m_Gameplay_DodgeInput = m_Gameplay.FindAction("DodgeInput", throwIfNotFound: true);
        m_Gameplay_PhaseInput = m_Gameplay.FindAction("PhaseInput", throwIfNotFound: true);
        m_Gameplay_CrouchInput = m_Gameplay.FindAction("CrouchInput", throwIfNotFound: true);
        m_Gameplay_GrabInput = m_Gameplay.FindAction("GrabInput", throwIfNotFound: true);
        m_Gameplay_InteractInput = m_Gameplay.FindAction("InteractInput", throwIfNotFound: true);
        m_Gameplay_ContinueDialogueInput = m_Gameplay.FindAction("ContinueDialogueInput", throwIfNotFound: true);
        m_Gameplay_PauseInput = m_Gameplay.FindAction("PauseInput", throwIfNotFound: true);
        m_Gameplay_OpenJournalInput = m_Gameplay.FindAction("OpenJournalInput", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_MovementInput;
    private readonly InputAction m_Gameplay_AimDirectionInput;
    private readonly InputAction m_Gameplay_SprintInput;
    private readonly InputAction m_Gameplay_JumpInput;
    private readonly InputAction m_Gameplay_AimInput;
    private readonly InputAction m_Gameplay_CombatModeInput;
    private readonly InputAction m_Gameplay_MeleeAttackInput;
    private readonly InputAction m_Gameplay_HeavyAttackInput;
    private readonly InputAction m_Gameplay_BowAttack;
    private readonly InputAction m_Gameplay_SpecialAttackInput;
    private readonly InputAction m_Gameplay_DodgeInput;
    private readonly InputAction m_Gameplay_PhaseInput;
    private readonly InputAction m_Gameplay_CrouchInput;
    private readonly InputAction m_Gameplay_GrabInput;
    private readonly InputAction m_Gameplay_InteractInput;
    private readonly InputAction m_Gameplay_ContinueDialogueInput;
    private readonly InputAction m_Gameplay_PauseInput;
    private readonly InputAction m_Gameplay_OpenJournalInput;
    public struct GameplayActions
    {
        private @Player m_Wrapper;
        public GameplayActions(@Player wrapper) { m_Wrapper = wrapper; }
        public InputAction @MovementInput => m_Wrapper.m_Gameplay_MovementInput;
        public InputAction @AimDirectionInput => m_Wrapper.m_Gameplay_AimDirectionInput;
        public InputAction @SprintInput => m_Wrapper.m_Gameplay_SprintInput;
        public InputAction @JumpInput => m_Wrapper.m_Gameplay_JumpInput;
        public InputAction @AimInput => m_Wrapper.m_Gameplay_AimInput;
        public InputAction @CombatModeInput => m_Wrapper.m_Gameplay_CombatModeInput;
        public InputAction @MeleeAttackInput => m_Wrapper.m_Gameplay_MeleeAttackInput;
        public InputAction @HeavyAttackInput => m_Wrapper.m_Gameplay_HeavyAttackInput;
        public InputAction @BowAttack => m_Wrapper.m_Gameplay_BowAttack;
        public InputAction @SpecialAttackInput => m_Wrapper.m_Gameplay_SpecialAttackInput;
        public InputAction @DodgeInput => m_Wrapper.m_Gameplay_DodgeInput;
        public InputAction @PhaseInput => m_Wrapper.m_Gameplay_PhaseInput;
        public InputAction @CrouchInput => m_Wrapper.m_Gameplay_CrouchInput;
        public InputAction @GrabInput => m_Wrapper.m_Gameplay_GrabInput;
        public InputAction @InteractInput => m_Wrapper.m_Gameplay_InteractInput;
        public InputAction @ContinueDialogueInput => m_Wrapper.m_Gameplay_ContinueDialogueInput;
        public InputAction @PauseInput => m_Wrapper.m_Gameplay_PauseInput;
        public InputAction @OpenJournalInput => m_Wrapper.m_Gameplay_OpenJournalInput;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @MovementInput.started += instance.OnMovementInput;
            @MovementInput.performed += instance.OnMovementInput;
            @MovementInput.canceled += instance.OnMovementInput;
            @AimDirectionInput.started += instance.OnAimDirectionInput;
            @AimDirectionInput.performed += instance.OnAimDirectionInput;
            @AimDirectionInput.canceled += instance.OnAimDirectionInput;
            @SprintInput.started += instance.OnSprintInput;
            @SprintInput.performed += instance.OnSprintInput;
            @SprintInput.canceled += instance.OnSprintInput;
            @JumpInput.started += instance.OnJumpInput;
            @JumpInput.performed += instance.OnJumpInput;
            @JumpInput.canceled += instance.OnJumpInput;
            @AimInput.started += instance.OnAimInput;
            @AimInput.performed += instance.OnAimInput;
            @AimInput.canceled += instance.OnAimInput;
            @CombatModeInput.started += instance.OnCombatModeInput;
            @CombatModeInput.performed += instance.OnCombatModeInput;
            @CombatModeInput.canceled += instance.OnCombatModeInput;
            @MeleeAttackInput.started += instance.OnMeleeAttackInput;
            @MeleeAttackInput.performed += instance.OnMeleeAttackInput;
            @MeleeAttackInput.canceled += instance.OnMeleeAttackInput;
            @HeavyAttackInput.started += instance.OnHeavyAttackInput;
            @HeavyAttackInput.performed += instance.OnHeavyAttackInput;
            @HeavyAttackInput.canceled += instance.OnHeavyAttackInput;
            @BowAttack.started += instance.OnBowAttack;
            @BowAttack.performed += instance.OnBowAttack;
            @BowAttack.canceled += instance.OnBowAttack;
            @SpecialAttackInput.started += instance.OnSpecialAttackInput;
            @SpecialAttackInput.performed += instance.OnSpecialAttackInput;
            @SpecialAttackInput.canceled += instance.OnSpecialAttackInput;
            @DodgeInput.started += instance.OnDodgeInput;
            @DodgeInput.performed += instance.OnDodgeInput;
            @DodgeInput.canceled += instance.OnDodgeInput;
            @PhaseInput.started += instance.OnPhaseInput;
            @PhaseInput.performed += instance.OnPhaseInput;
            @PhaseInput.canceled += instance.OnPhaseInput;
            @CrouchInput.started += instance.OnCrouchInput;
            @CrouchInput.performed += instance.OnCrouchInput;
            @CrouchInput.canceled += instance.OnCrouchInput;
            @GrabInput.started += instance.OnGrabInput;
            @GrabInput.performed += instance.OnGrabInput;
            @GrabInput.canceled += instance.OnGrabInput;
            @InteractInput.started += instance.OnInteractInput;
            @InteractInput.performed += instance.OnInteractInput;
            @InteractInput.canceled += instance.OnInteractInput;
            @ContinueDialogueInput.started += instance.OnContinueDialogueInput;
            @ContinueDialogueInput.performed += instance.OnContinueDialogueInput;
            @ContinueDialogueInput.canceled += instance.OnContinueDialogueInput;
            @PauseInput.started += instance.OnPauseInput;
            @PauseInput.performed += instance.OnPauseInput;
            @PauseInput.canceled += instance.OnPauseInput;
            @OpenJournalInput.started += instance.OnOpenJournalInput;
            @OpenJournalInput.performed += instance.OnOpenJournalInput;
            @OpenJournalInput.canceled += instance.OnOpenJournalInput;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @MovementInput.started -= instance.OnMovementInput;
            @MovementInput.performed -= instance.OnMovementInput;
            @MovementInput.canceled -= instance.OnMovementInput;
            @AimDirectionInput.started -= instance.OnAimDirectionInput;
            @AimDirectionInput.performed -= instance.OnAimDirectionInput;
            @AimDirectionInput.canceled -= instance.OnAimDirectionInput;
            @SprintInput.started -= instance.OnSprintInput;
            @SprintInput.performed -= instance.OnSprintInput;
            @SprintInput.canceled -= instance.OnSprintInput;
            @JumpInput.started -= instance.OnJumpInput;
            @JumpInput.performed -= instance.OnJumpInput;
            @JumpInput.canceled -= instance.OnJumpInput;
            @AimInput.started -= instance.OnAimInput;
            @AimInput.performed -= instance.OnAimInput;
            @AimInput.canceled -= instance.OnAimInput;
            @CombatModeInput.started -= instance.OnCombatModeInput;
            @CombatModeInput.performed -= instance.OnCombatModeInput;
            @CombatModeInput.canceled -= instance.OnCombatModeInput;
            @MeleeAttackInput.started -= instance.OnMeleeAttackInput;
            @MeleeAttackInput.performed -= instance.OnMeleeAttackInput;
            @MeleeAttackInput.canceled -= instance.OnMeleeAttackInput;
            @HeavyAttackInput.started -= instance.OnHeavyAttackInput;
            @HeavyAttackInput.performed -= instance.OnHeavyAttackInput;
            @HeavyAttackInput.canceled -= instance.OnHeavyAttackInput;
            @BowAttack.started -= instance.OnBowAttack;
            @BowAttack.performed -= instance.OnBowAttack;
            @BowAttack.canceled -= instance.OnBowAttack;
            @SpecialAttackInput.started -= instance.OnSpecialAttackInput;
            @SpecialAttackInput.performed -= instance.OnSpecialAttackInput;
            @SpecialAttackInput.canceled -= instance.OnSpecialAttackInput;
            @DodgeInput.started -= instance.OnDodgeInput;
            @DodgeInput.performed -= instance.OnDodgeInput;
            @DodgeInput.canceled -= instance.OnDodgeInput;
            @PhaseInput.started -= instance.OnPhaseInput;
            @PhaseInput.performed -= instance.OnPhaseInput;
            @PhaseInput.canceled -= instance.OnPhaseInput;
            @CrouchInput.started -= instance.OnCrouchInput;
            @CrouchInput.performed -= instance.OnCrouchInput;
            @CrouchInput.canceled -= instance.OnCrouchInput;
            @GrabInput.started -= instance.OnGrabInput;
            @GrabInput.performed -= instance.OnGrabInput;
            @GrabInput.canceled -= instance.OnGrabInput;
            @InteractInput.started -= instance.OnInteractInput;
            @InteractInput.performed -= instance.OnInteractInput;
            @InteractInput.canceled -= instance.OnInteractInput;
            @ContinueDialogueInput.started -= instance.OnContinueDialogueInput;
            @ContinueDialogueInput.performed -= instance.OnContinueDialogueInput;
            @ContinueDialogueInput.canceled -= instance.OnContinueDialogueInput;
            @PauseInput.started -= instance.OnPauseInput;
            @PauseInput.performed -= instance.OnPauseInput;
            @PauseInput.canceled -= instance.OnPauseInput;
            @OpenJournalInput.started -= instance.OnOpenJournalInput;
            @OpenJournalInput.performed -= instance.OnOpenJournalInput;
            @OpenJournalInput.canceled -= instance.OnOpenJournalInput;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnMovementInput(InputAction.CallbackContext context);
        void OnAimDirectionInput(InputAction.CallbackContext context);
        void OnSprintInput(InputAction.CallbackContext context);
        void OnJumpInput(InputAction.CallbackContext context);
        void OnAimInput(InputAction.CallbackContext context);
        void OnCombatModeInput(InputAction.CallbackContext context);
        void OnMeleeAttackInput(InputAction.CallbackContext context);
        void OnHeavyAttackInput(InputAction.CallbackContext context);
        void OnBowAttack(InputAction.CallbackContext context);
        void OnSpecialAttackInput(InputAction.CallbackContext context);
        void OnDodgeInput(InputAction.CallbackContext context);
        void OnPhaseInput(InputAction.CallbackContext context);
        void OnCrouchInput(InputAction.CallbackContext context);
        void OnGrabInput(InputAction.CallbackContext context);
        void OnInteractInput(InputAction.CallbackContext context);
        void OnContinueDialogueInput(InputAction.CallbackContext context);
        void OnPauseInput(InputAction.CallbackContext context);
        void OnOpenJournalInput(InputAction.CallbackContext context);
    }
}
